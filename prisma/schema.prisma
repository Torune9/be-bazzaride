// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id Int @id @default(autoincrement())
  name String

  user User[]
}

model Profile {
  id String @id @default(uuid())
  firstName String
  lastName String
  image String?
  userId String @unique
  description String?

  user User @relation(fields: [userId],references: [id])
}

model User {
  id String @id @default(uuid())
  username String
  email String @unique
  password String
  roleId Int? 
  
  role Role? @relation(fields: [roleId],references: [id],onDelete: SetNull)
  profile Profile?
  address UserAddress[]
  events Event[]
  store Store?
}

model UserAddress {
  id String @id @default(uuid())
  userId String
  city String
  district String

  user User @relation(fields: [userId],references: [id])
}

model Category {
  id String @id @default(uuid())
  name String

  event Event[]
}

model Store {
  id String @id @default(uuid())
  userId String @unique
  name String
  image String?
  description String

  user User @relation(fields: [userId], references: [id])

}

model Event {
  id String @id @default(uuid())
  userId String
  categoryId String?
  name String
  description String?
  quota Int
  address String
  poster String
  
  category Category? @relation(fields: [categoryId],references: [id])
  user User @relation(fields: [userId],references: [id])
}
